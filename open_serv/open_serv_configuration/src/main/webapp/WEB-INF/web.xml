<!DOCTYPE web-app PUBLIC
"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app
xmlns="http://java.sun.com/xml/ns/j2ee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
version="2.4"
xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<!--Spring ApplicationContext配置文件的路径。可使用通配符，多个路径用逗号分隔。 此参数用于后面的“Spring Context loader” -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/*.xml</param-value>
	</context-param>

	<!-- 加载log4j.properties。此参数用于后面的Spring的log4j监听 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>serv_configuration</param-value>
	</context-param>

	<!-- 配置Spring的log4j监听 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!--Spring Context loader -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 监听HTTP请求事件,以支持Bean的request、session和global session 3个作用域 -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
    <!-- 自定义监听.启动redis检测 -->
    <listener>
        <listener-class>com.dc.city.common.jedis.support.RedisListener</listener-class>
    </listener>
	<!--famous Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    <!-- 跨域 -->
    <filter>
        <filter-name>responseFilter</filter-name>
        <filter-class>com.dc.city.filter.ResponseFilter</filter-class>     
    </filter>
    <filter-mapping>
        <filter-name>responseFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	<filter>
		<filter-name>resloveMessyCodeFilter</filter-name>
		<filter-class>com.dc.city.common.filters.ResloveMessyCodeFilter</filter-class>
		<init-param>
			<param-name>DEFAULT_URI_ENCODE</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>resloveMessyCodeFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    <!-- 权限验证过滤器 -->
    <filter>
        <filter-name>OpenCheckLoginFilter</filter-name>
        <filter-class>com.dc.city.common.auth.filter.OpenCheckLoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>OpenCheckLoginFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	<!--session 超时定义 分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<!--默认首页定义 -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	<!-- 配置cxf servlet -->
	<servlet>
		<servlet-name>cxf</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>cxf</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
   
        <!--默认首页定义
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list> -->
</web-app>
